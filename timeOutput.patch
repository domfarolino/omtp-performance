# HG changeset patch
# User Dominic Farolino <domfarolino@gmail.com>
Basic time-keeping


diff --git a/gfx/layers/client/ClientLayerManager.cpp b/gfx/layers/client/ClientLayerManager.cpp
index 8a18e32..9c16b06 100644
--- a/gfx/layers/client/ClientLayerManager.cpp
+++ b/gfx/layers/client/ClientLayerManager.cpp
@@ -222,17 +222,23 @@ ClientLayerManager::CreateReadbackLayer()
   RefPtr<ReadbackLayer> layer = new ClientReadbackLayer(this);
   return layer.forget();
 }
 
 bool
 ClientLayerManager::BeginTransactionWithTarget(gfxContext* aTarget)
 {
   // Wait for any previous async paints to complete before starting to paint again.
+  mozilla::TimeStamp mFlushAsyncPaintTime = TimeStamp::Now();
   GetCompositorBridgeChild()->FlushAsyncPaints();
+  // Only if we're in the content process do we want to view
+  // the time it takes to flush paints
+  if (XRE_IsContentProcess()) {
+    printf("FlushAsyncPaint:%f\n", (TimeStamp::Now() - mFlushAsyncPaintTime).ToMilliseconds());
+  }
 
   MOZ_ASSERT(mForwarder, "ClientLayerManager::BeginTransaction without forwarder");
   if (!mForwarder->IPCOpen()) {
     gfxCriticalNote << "ClientLayerManager::BeginTransaction with IPC channel down. GPU process may have died.";
     return false;
   }
 
   if (XRE_IsContentProcess() &&
@@ -369,17 +375,23 @@ ClientLayerManager::EndTransactionInternal(DrawPaintedLayerCallback aCallback,
 
   // Skip the painting if the device is in device-reset status.
   if (!gfxPlatform::GetPlatform()->DidRenderingDeviceReset()) {
     if (gfxPrefs::AlwaysPaint() && XRE_IsContentProcess()) {
       TimeStamp start = TimeStamp::Now();
       root->RenderLayer();
       mLastPaintTime = TimeStamp::Now() - start;
     } else {
+      mozilla::TimeStamp mRenderLayerStartTime = TimeStamp::Now();
       root->RenderLayer();
+      if (XRE_IsContentProcess()) {
+        // Only if we're in the content process do we want to view
+        // how long it takes to render layers
+        printf("RenderLayer:%f\n", (TimeStamp::Now() - mRenderLayerStartTime).ToMilliseconds());
+      }
     }
   } else {
     gfxCriticalNote << "LayerManager::EndTransaction skip RenderLayer().";
   }
 
   if (!mRepeatTransaction && !GetRoot()->GetInvalidRegion().IsEmpty()) {
     GetRoot()->Mutated();
   }
